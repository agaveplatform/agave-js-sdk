/**
 * Agave Platform Science API
 * Power your digital lab and reduce the time from theory to discovery using the Agave Science-as-a-Service API Platform. Agave provides hosted services that allow researchers to manage data, conduct experiments, and publish and share results from anywhere at any time.
 *
 * OpenAPI spec version: 2.2.14
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'Model/SystemStatusType', 'Model/SystemStorageConfig', 'Model/SystemType'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./SystemStatusType'), require('./SystemStorageConfig'), require('./SystemType'));
  } else {
    // Browser globals (root is window)
    if (!root.AgaveJsSdk) {
      root.AgaveJsSdk = {};
    }
    root.AgaveJsSdk.System = factory(root.AgaveJsSdk.ApiClient, root.AgaveJsSdk.SystemStatusType, root.AgaveJsSdk.SystemStorageConfig, root.AgaveJsSdk.SystemType);
  }
}(this, function(ApiClient, SystemStatusType, SystemStorageConfig, SystemType) {
  'use strict';




  /**
   * The System model module.
   * @module Model/System
   * @version 0.1.0
   */

  /**
   * Constructs a new <code>System</code>.
   * @alias module:Model/System
   * @class
   * @param description {String} Verbose description of this system.
   * @param id {String} Unique identifier for this system.
   * @param isDefault {Boolean} Is the system the default for the authenticated user?
   * @param isPublic {Boolean} Is the system publicly available?
   * @param lastModified {Date} The date this system was last modified in ISO 8601 format.
   * @param name {String} Common name for this system.
   * @param revision {Number} The number of times this app has been updated.
   * @param storage {module:Model/SystemStorageConfig} 
   * @param type {module:Model/SystemType} 
   */
  var exports = function(description, id, isDefault, isPublic, lastModified, name, revision, storage, type) {
    var _this = this;

    _this['description'] = description;

    _this['id'] = id;
    _this['isDefault'] = isDefault;
    _this['isPublic'] = isPublic;
    _this['lastModified'] = lastModified;
    _this['name'] = name;
    _this['revision'] = revision;



    _this['storage'] = storage;
    _this['type'] = type;

  };

  /**
   * Constructs a <code>System</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:Model/System} obj Optional instance to populate.
   * @return {module:Model/System} The populated <code>System</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('environment')) {
        obj['environment'] = ApiClient.convertToType(data['environment'], 'String');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('isDefault')) {
        obj['isDefault'] = ApiClient.convertToType(data['isDefault'], 'Boolean');
      }
      if (data.hasOwnProperty('isPublic')) {
        obj['isPublic'] = ApiClient.convertToType(data['isPublic'], 'Boolean');
      }
      if (data.hasOwnProperty('lastModified')) {
        obj['lastModified'] = ApiClient.convertToType(data['lastModified'], 'Date');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('revision')) {
        obj['revision'] = ApiClient.convertToType(data['revision'], 'Number');
      }
      if (data.hasOwnProperty('scratchDir')) {
        obj['scratchDir'] = ApiClient.convertToType(data['scratchDir'], 'String');
      }
      if (data.hasOwnProperty('site')) {
        obj['site'] = ApiClient.convertToType(data['site'], 'String');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = SystemStatusType.constructFromObject(data['status']);
      }
      if (data.hasOwnProperty('storage')) {
        obj['storage'] = SystemStorageConfig.constructFromObject(data['storage']);
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = SystemType.constructFromObject(data['type']);
      }
      if (data.hasOwnProperty('uuid')) {
        obj['uuid'] = ApiClient.convertToType(data['uuid'], 'String');
      }
    }
    return obj;
  }

  /**
   * Verbose description of this system.
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * Environment variables to set upon login prior to job submission.
   * @member {String} environment
   */
  exports.prototype['environment'] = undefined;
  /**
   * Unique identifier for this system.
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Is the system the default for the authenticated user?
   * @member {Boolean} isDefault
   * @default false
   */
  exports.prototype['isDefault'] = false;
  /**
   * Is the system publicly available?
   * @member {Boolean} isPublic
   * @default false
   */
  exports.prototype['isPublic'] = false;
  /**
   * The date this system was last modified in ISO 8601 format.
   * @member {Date} lastModified
   */
  exports.prototype['lastModified'] = undefined;
  /**
   * Common name for this system.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * The number of times this app has been updated.
   * @member {Number} revision
   * @default 1
   */
  exports.prototype['revision'] = 1;
  /**
   * The scratch directory where job execution directories will be created at runtime. The workDir is used if this is not specified.
   * @member {String} scratchDir
   */
  exports.prototype['scratchDir'] = undefined;
  /**
   * The site associated with this system.
   * @member {String} site
   */
  exports.prototype['site'] = undefined;
  /**
   * @member {module:Model/SystemStatusType} status
   */
  exports.prototype['status'] = undefined;
  /**
   * @member {module:Model/SystemStorageConfig} storage
   */
  exports.prototype['storage'] = undefined;
  /**
   * @member {module:Model/SystemType} type
   */
  exports.prototype['type'] = undefined;
  /**
   * The uuid of this system.
   * @member {String} uuid
   */
  exports.prototype['uuid'] = undefined;



  return exports;
}));


