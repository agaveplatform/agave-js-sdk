/**
 * Agave Platform Science API
 * Power your digital lab and reduce the time from theory to discovery using the Agave Science-as-a-Service API Platform. Agave provides hosted services that allow researchers to manage data, conduct experiments, and publish and share results from anywhere at any time.
 *
 * OpenAPI spec version: 2.2.14
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.AgaveJsSdk) {
      root.AgaveJsSdk = {};
    }
    root.AgaveJsSdk.AbstractApplicationParameterValue = factory(root.AgaveJsSdk.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The AbstractApplicationParameterValue model module.
   * @module Model/AbstractApplicationParameterValue
   * @version 0.1.0
   */

  /**
   * Constructs a new <code>AbstractApplicationParameterValue</code>.
   * @alias module:Model/AbstractApplicationParameterValue
   * @class
   * @param enquote {Boolean} Whether the argument value should be surrounded by quotation marks before injection into the wrapper template at runtime
   * @param order {Number} The order in which this parameter should be printed when generating an execution command for forked execution. This will also be the order in which paramters are returned in the response json.
   * @param required {Boolean} Is this parameter required? If visible is false, this must be true.
   * @param type {String} The type of this parameter value. (Acceptable values are: \"string\", \"number\", \"enumeration\", \"bool\", \"flag\")
   * @param visible {Boolean} Should this parameter be visible? If not, there must be a default and it will be required.
   */
  var exports = function(enquote, order, required, type, visible) {
    var _this = this;



    _this['enquote'] = enquote;
    _this['order'] = order;
    _this['required'] = required;
    _this['type'] = type;

    _this['visible'] = visible;
  };

  /**
   * Constructs a <code>AbstractApplicationParameterValue</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:Model/AbstractApplicationParameterValue} obj Optional instance to populate.
   * @return {module:Model/AbstractApplicationParameterValue} The populated <code>AbstractApplicationParameterValue</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('defaultValue')) {
        obj['defaultValue'] = ApiClient.convertToType(data['defaultValue'], 'String');
      }
      if (data.hasOwnProperty('enumValues')) {
        obj['enumValues'] = ApiClient.convertToType(data['enumValues'], 'String');
      }
      if (data.hasOwnProperty('enquote')) {
        obj['enquote'] = ApiClient.convertToType(data['enquote'], 'Boolean');
      }
      if (data.hasOwnProperty('order')) {
        obj['order'] = ApiClient.convertToType(data['order'], 'Number');
      }
      if (data.hasOwnProperty('required')) {
        obj['required'] = ApiClient.convertToType(data['required'], 'Boolean');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('validator')) {
        obj['validator'] = ApiClient.convertToType(data['validator'], 'String');
      }
      if (data.hasOwnProperty('visible')) {
        obj['visible'] = ApiClient.convertToType(data['visible'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * The default value for this parameter. The type will be determined by the value.type field.
   * @member {String} defaultValue
   */
  exports.prototype['defaultValue'] = undefined;
  /**
   * An array of enumerated object values.
   * @member {String} enumValues
   */
  exports.prototype['enumValues'] = undefined;
  /**
   * Whether the argument value should be surrounded by quotation marks before injection into the wrapper template at runtime
   * @member {Boolean} enquote
   * @default false
   */
  exports.prototype['enquote'] = false;
  /**
   * The order in which this parameter should be printed when generating an execution command for forked execution. This will also be the order in which paramters are returned in the response json.
   * @member {Number} order
   * @default 0
   */
  exports.prototype['order'] = 0;
  /**
   * Is this parameter required? If visible is false, this must be true.
   * @member {Boolean} required
   * @default false
   */
  exports.prototype['required'] = false;
  /**
   * The type of this parameter value. (Acceptable values are: \"string\", \"number\", \"enumeration\", \"bool\", \"flag\")
   * @member {String} type
   * @default 'string'
   */
  exports.prototype['type'] = 'string';
  /**
   * The regular expression used to validate this parameter value. For enumerations, separate values with |
   * @member {String} validator
   */
  exports.prototype['validator'] = undefined;
  /**
   * Should this parameter be visible? If not, there must be a default and it will be required.
   * @member {Boolean} visible
   * @default true
   */
  exports.prototype['visible'] = true;



  return exports;
}));


