/**
 * Agave Platform Science API
 * Power your digital lab and reduce the time from theory to discovery using the Agave Science-as-a-Service API Platform. Agave provides hosted services that allow researchers to manage data, conduct experiments, and publish and share results from anywhere at any time.
 *
 * OpenAPI spec version: 2.2.14
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'Model/NotificationRequest'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./NotificationRequest'));
  } else {
    // Browser globals (root is window)
    if (!root.AgaveJsSdk) {
      root.AgaveJsSdk = {};
    }
    root.AgaveJsSdk.FileImportRequest = factory(root.AgaveJsSdk.ApiClient, root.AgaveJsSdk.NotificationRequest);
  }
}(this, function(ApiClient, NotificationRequest) {
  'use strict';




  /**
   * The FileImportRequest model module.
   * @module Model/FileImportRequest
   * @version 0.1.0
   */

  /**
   * Constructs a new <code>FileImportRequest</code>.
   * File import request to copy a file from an accessible URL.
   * @alias module:Model/FileImportRequest
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>FileImportRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:Model/FileImportRequest} obj Optional instance to populate.
   * @return {module:Model/FileImportRequest} The populated <code>FileImportRequest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('fileType')) {
        obj['fileType'] = ApiClient.convertToType(data['fileType'], 'String');
      }
      if (data.hasOwnProperty('notifications')) {
        obj['notifications'] = ApiClient.convertToType(data['notifications'], [NotificationRequest]);
      }
      if (data.hasOwnProperty('fileName')) {
        obj['fileName'] = ApiClient.convertToType(data['fileName'], 'String');
      }
      if (data.hasOwnProperty('append')) {
        obj['append'] = ApiClient.convertToType(data['append'], 'Boolean');
      }
      if (data.hasOwnProperty('urlToImport')) {
        obj['urlToImport'] = ApiClient.convertToType(data['urlToImport'], 'String');
      }
    }
    return obj;
  }

  /**
   * The file format this file is in. Defaults to raw. This will be used in file transform operations.
   * @member {String} fileType
   */
  exports.prototype['fileType'] = undefined;
  /**
   * Notifications to set with the successful acceptance of this upload request
   * @member {Array.<module:Model/NotificationRequest>} notifications
   */
  exports.prototype['notifications'] = undefined;
  /**
   * The name to give the upload file. If unset, takes the original file name.
   * @member {String} fileName
   */
  exports.prototype['fileName'] = undefined;
  /**
   * Boolean flag indicating this file should be appended to the target file
   * @member {Boolean} append
   * @default false
   */
  exports.prototype['append'] = false;
  /**
   * The URL to import the file from. This parameter is used if not file is uploaded with this post.
   * @member {String} urlToImport
   */
  exports.prototype['urlToImport'] = undefined;



  return exports;
}));


