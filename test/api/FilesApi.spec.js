/**
 * Agave Platform Science API
 * Power your digital lab and reduce the time from theory to discovery using the Agave Science-as-a-Service API Platform. Agave provides hosted services that allow researchers to manage data, conduct experiments, and publish and share results from anywhere at any time.
 *
 * OpenAPI spec version: 2.2.14
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AgaveJsSdk);
  }
}(this, function(expect, AgaveJsSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AgaveJsSdk.FilesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FilesApi', function() {
    describe('clearFileItemPermissions', function() {
      it('should call clearFileItemPermissions successfully', function(done) {
        //uncomment below and update the code to test clearFileItemPermissions
        //instance.clearFileItemPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFileItem', function() {
      it('should call deleteFileItem successfully', function(done) {
        //uncomment below and update the code to test deleteFileItem
        //instance.deleteFileItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFileItemOnDefaultSystem', function() {
      it('should call deleteFileItemOnDefaultSystem successfully', function(done) {
        //uncomment below and update the code to test deleteFileItemOnDefaultSystem
        //instance.deleteFileItemOnDefaultSystem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('downloadFileItem', function() {
      it('should call downloadFileItem successfully', function(done) {
        //uncomment below and update the code to test downloadFileItem
        //instance.downloadFileItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('downloadFileItemOnDefaultSystem', function() {
      it('should call downloadFileItemOnDefaultSystem successfully', function(done) {
        //uncomment below and update the code to test downloadFileItemOnDefaultSystem
        //instance.downloadFileItemOnDefaultSystem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('importFileItem', function() {
      it('should call importFileItem successfully', function(done) {
        //uncomment below and update the code to test importFileItem
        //instance.importFileItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('importFileItemToDefaultSystem', function() {
      it('should call importFileItemToDefaultSystem successfully', function(done) {
        //uncomment below and update the code to test importFileItemToDefaultSystem
        //instance.importFileItemToDefaultSystem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('invokeFileActionOnDefaultSystem', function() {
      it('should call invokeFileActionOnDefaultSystem successfully', function(done) {
        //uncomment below and update the code to test invokeFileActionOnDefaultSystem
        //instance.invokeFileActionOnDefaultSystem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('invokeFileItemAction', function() {
      it('should call invokeFileItemAction successfully', function(done) {
        //uncomment below and update the code to test invokeFileItemAction
        //instance.invokeFileItemAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFileItemHistory', function() {
      it('should call listFileItemHistory successfully', function(done) {
        //uncomment below and update the code to test listFileItemHistory
        //instance.listFileItemHistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFileItemHistoryOnDefaultSystem', function() {
      it('should call listFileItemHistoryOnDefaultSystem successfully', function(done) {
        //uncomment below and update the code to test listFileItemHistoryOnDefaultSystem
        //instance.listFileItemHistoryOnDefaultSystem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFileItemPermissions', function() {
      it('should call listFileItemPermissions successfully', function(done) {
        //uncomment below and update the code to test listFileItemPermissions
        //instance.listFileItemPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFileItemPermissionsOnDefaultSystem', function() {
      it('should call listFileItemPermissionsOnDefaultSystem successfully', function(done) {
        //uncomment below and update the code to test listFileItemPermissionsOnDefaultSystem
        //instance.listFileItemPermissionsOnDefaultSystem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFileItems', function() {
      it('should call listFileItems successfully', function(done) {
        //uncomment below and update the code to test listFileItems
        //instance.listFileItems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFileItemsOnDefaultSystem', function() {
      it('should call listFileItemsOnDefaultSystem successfully', function(done) {
        //uncomment below and update the code to test listFileItemsOnDefaultSystem
        //instance.listFileItemsOnDefaultSystem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFileItemPermission', function() {
      it('should call updateFileItemPermission successfully', function(done) {
        //uncomment below and update the code to test updateFileItemPermission
        //instance.updateFileItemPermission(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFileItemPermissionsOnDefaultSystem', function() {
      it('should call updateFileItemPermissionsOnDefaultSystem successfully', function(done) {
        //uncomment below and update the code to test updateFileItemPermissionsOnDefaultSystem
        //instance.updateFileItemPermissionsOnDefaultSystem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
