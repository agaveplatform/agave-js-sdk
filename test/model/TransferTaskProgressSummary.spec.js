/**
 * Agave Platform Science API
 * Power your digital lab and reduce the time from theory to discovery using the Agave Science-as-a-Service API Platform. Agave provides hosted services that allow researchers to manage data, conduct experiments, and publish and share results from anywhere at any time.
 *
 * OpenAPI spec version: 2.2.14
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AgaveJsSdk);
  }
}(this, function(expect, AgaveJsSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AgaveJsSdk.TransferTaskProgressSummary();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TransferTaskProgressSummary', function() {
    it('should create an instance of TransferTaskProgressSummary', function() {
      // uncomment below and update the code to test TransferTaskProgressSummary
      //var instance = new AgaveJsSdk.TransferTaskProgressSummary();
      //expect(instance).to.be.a(AgaveJsSdk.TransferTaskProgressSummary);
    });

    it('should have the property averageRate (base name: "averageRate")', function() {
      // uncomment below and update the code to test the property averageRate
      //var instance = new AgaveJsSdk.TransferTaskProgressSummary();
      //expect(instance).to.be();
    });

    it('should have the property source (base name: "source")', function() {
      // uncomment below and update the code to test the property source
      //var instance = new AgaveJsSdk.TransferTaskProgressSummary();
      //expect(instance).to.be();
    });

    it('should have the property totalActiveTransfers (base name: "totalActiveTransfers")', function() {
      // uncomment below and update the code to test the property totalActiveTransfers
      //var instance = new AgaveJsSdk.TransferTaskProgressSummary();
      //expect(instance).to.be();
    });

    it('should have the property totalBytes (base name: "totalBytes")', function() {
      // uncomment below and update the code to test the property totalBytes
      //var instance = new AgaveJsSdk.TransferTaskProgressSummary();
      //expect(instance).to.be();
    });

    it('should have the property totalBytesTransferred (base name: "totalBytesTransferred")', function() {
      // uncomment below and update the code to test the property totalBytesTransferred
      //var instance = new AgaveJsSdk.TransferTaskProgressSummary();
      //expect(instance).to.be();
    });

    it('should have the property totalFiles (base name: "totalFiles")', function() {
      // uncomment below and update the code to test the property totalFiles
      //var instance = new AgaveJsSdk.TransferTaskProgressSummary();
      //expect(instance).to.be();
    });

    it('should have the property uuid (base name: "uuid")', function() {
      // uncomment below and update the code to test the property uuid
      //var instance = new AgaveJsSdk.TransferTaskProgressSummary();
      //expect(instance).to.be();
    });

  });

}));
